name: Release
description: "Creates a GitHub release and publishes targets to crates.io and NPM"
on:
  workflow_run:
    workflows: [Test]
    types: [completed]
env:
  TAG_NAME: ${{ github.event.workflow_run.head_branch }}
  PYTHON_DIST_PATH: ./target/wheels/

jobs:
  # Create GitHub release
  release:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ env.TAG_NAME }}

      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release create ${{ env.TAG_NAME }} \
            --verify-tag \
            --title "${{ env.TAG_NAME }}" \
            --notes "See [CHANGELOG.md](https://github.com/Daniel-Knights/changenog/blob/main/CHANGELOG.md) for details."

  # Copy README to package directories
  readme:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ env.TAG_NAME }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node
        uses: actions/setup-node@v5
        with:
          node-version: "latest"
          cache: "pnpm"

      - run: pnpm install
      - run: pnpm tsx scripts/readme.ts

      - uses: actions/upload-artifact@v4
        with:
          name: readme
          path: packages/**/README.md

  # Build and publish targets
  targets:
    needs: [readme]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      id-token: write
    env:
      EXE_NAME: changenog${{ matrix.os == 'windows-latest' && '.exe' || '' }}
      EXE_DIR: target/${{ matrix.target }}/release
    strategy:
      matrix:
        # Dynamically generated in scripts/toolchain.ts
        include:
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04-arm
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ env.TAG_NAME }}

      - name: Download README artifacts
        uses: actions/download-artifact@v5
        with:
          name: readme
          path: ./packages

      - name: Build for target
        uses: ./.github/actions/target-build
        with:
          target: ${{ matrix.target }}

      - name: Copy built executable to package directories
        run: |
          cp ${{ env.EXE_DIR }}/${{ env.EXE_NAME }} ./packages/js/targets/${{ matrix.target }}
          cp ${{ env.EXE_DIR }}/${{ env.EXE_NAME }} ./packages/python/core/${{ env.EXE_NAME }}

      - name: Build Python wheels
        uses: PyO3/maturin-action@v1
        with:
          working-directory: ./packages/python/core
          command: build
          args: --release
          target: ${{ matrix.target }}
          sccache: true

      - name: Store wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheel-${{ matrix.target }}
          path: ${{ env.PYTHON_DIST_PATH }}/*.whl
          if-no-files-found: error

      - name: Upload asset
        uses: ./.github/actions/upload-asset
        with:
          exe_dir: ${{ env.EXE_DIR }}
          exe_name: ${{ env.EXE_NAME }}
          tag_name: ${{ env.TAG_NAME }}
          target: ${{ matrix.target }}
          asset_path: ${{ matrix.target }}-${{ env.EXE_NAME }}

      - name: Publish target to NPM
        uses: ./.github/actions/pnpm-publish
        with:
          npm_auth_token: ${{ secrets.NPM_AUTH_TOKEN }}
          package_dir: ./packages/js/targets/${{ matrix.target }}

  # Publish core to NPM
  publish-core-npm:
    needs: [release, readme, targets]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ env.TAG_NAME }}

      - name: Download README artifacts
        uses: actions/download-artifact@v5
        with:
          name: readme
          path: ./packages

      - name: Publish core to NPM
        uses: ./.github/actions/pnpm-publish
        with:
          npm_auth_token: ${{ secrets.NPM_AUTH_TOKEN }}
          package_dir: ./packages/js/core

  # Publish core to PyPI
  publish-core-pypi:
    needs: [targets]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/p/changenog
    steps:
      - name: Download wheel artifacts
        uses: actions/download-artifact@v5
        with:
          path: ${{ env.PYTHON_DIST_PATH }}
          pattern: wheel-*
          merge-multiple: true

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ${{ env.PYTHON_DIST_PATH }}
          verbose: true

  # Publish core to crates.io
  publish-core-crates:
    needs: [release, targets]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ env.TAG_NAME }}

      - name: Publish to crates.io
        run: cargo publish --allow-dirty --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
