test: ["--version"]
1.2.0


test: ["-v"]
1.2.0


test: ["--help"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["-h"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["--overwrite"]
[33m[changenog][0m no tags found.  exiting...


test: ["--root=./bar/baz"]
[33m[changenog][0m no tags found.  exiting...


test: ["--output=stdout"]
[33m[changenog][0m no tags found.  exiting...


test: ["--no-links"]
[33m[changenog][0m no tags found.  exiting...


test: ["--remote-url=https://www.my-repo.com"]
[33m[changenog][0m no tags found.  exiting...


test: ["--max-commits=3"]
[33m[changenog][0m no tags found.  exiting...


test: ["--tag-filter-regex='my-package/.*'"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-preset=angular"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-preset=angular, --commit-filter-preset=angular-readme-only-docs"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-preset=no-changelog"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-preset=no-semver, --commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no tags found.  exiting...


test: ["--version"]
1.2.0


test: ["-v"]
1.2.0


test: ["--help"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["-h"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["--overwrite"]
[33m[changenog][0m no tags found.  exiting...


test: ["--root=./bar/baz"]
[33m[changenog][0m no tags found.  exiting...


test: ["--output=stdout"]
[33m[changenog][0m no tags found.  exiting...


test: ["--no-links"]
[33m[changenog][0m no tags found.  exiting...


test: ["--remote-url=https://www.my-repo.com"]
[33m[changenog][0m no tags found.  exiting...


test: ["--max-commits=3"]
[33m[changenog][0m no tags found.  exiting...


test: ["--tag-filter-regex='my-package/.*'"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-preset=angular"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-preset=angular, --commit-filter-preset=angular-readme-only-docs"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-preset=no-changelog"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-preset=no-semver, --commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no tags found.  exiting...


test: ["--version"]
1.2.0


test: ["-v"]
1.2.0


test: ["--help"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["-h"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["--overwrite"]


test: ["--root=./bar/baz"]


test: ["--output=stdout"]
## v1.0.0 (REPLACED)

- 1.0.0 (REPLACED)
- non-angular commit (REPLACED)
- refactor: refactor code (REPLACED)
- docs(changelog): 1.0.0 (REPLACED)
- chore(scripts): update scripts (REPLACED)
- feat(scope): add another feature (REPLACED)
- fix: fix bug (REPLACED)
- feat: add feature (REPLACED)
- docs(readme): update readme (REPLACED)
- 1.0.0 (REPLACED)
- non-angular commit (REPLACED)
- refactor: refactor code (REPLACED)
- docs(changelog): 1.0.0 (REPLACED)
- chore(scripts): update scripts (REPLACED)
- feat(scope): add another feature (REPLACED)
- fix: fix bug (REPLACED)
- feat: add feature (REPLACED)
- docs(readme): update readme (REPLACED)
- 1.0.0 (REPLACED)
- non-angular commit (REPLACED)
- refactor: refactor code (REPLACED)
- docs(changelog): 1.0.0 (REPLACED)
- chore(scripts): update scripts (REPLACED)
- feat(scope): add another feature (REPLACED)
- fix: fix bug (REPLACED)
- feat: add feature (REPLACED)
- docs(readme): update readme (REPLACED)
- feat: add baz (REPLACED)
- feat: add bar (REPLACED)
- feat: add foo (REPLACED)


test: ["--no-links"]


test: ["--remote-url=https://www.my-repo.com"]


test: ["--max-commits=3"]


test: ["--tag-filter-regex='my-package/.*'"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no commits since previous version.  exiting...


test: ["--commit-filter-preset=angular"]


test: ["--commit-filter-preset=angular, --commit-filter-preset=angular-readme-only-docs"]


test: ["--commit-filter-preset=no-changelog"]


test: ["--commit-filter-preset=no-semver, --commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no commits since previous version.  exiting...


test: ["--version"]
1.2.0


test: ["-v"]
1.2.0


test: ["--help"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["-h"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["--overwrite"]


test: ["--root=./bar/baz"]


test: ["--output=stdout"]
## [v1.0.0](https://www.my-remote.com/tags) (REPLACED)

- 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- non-angular commit ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- refactor: refactor code ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(changelog): 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- chore(scripts): update scripts ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat(scope): add another feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- fix: fix bug ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(readme): update readme ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- non-angular commit ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- refactor: refactor code ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(changelog): 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- chore(scripts): update scripts ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat(scope): add another feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- fix: fix bug ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(readme): update readme ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- non-angular commit ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- refactor: refactor code ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(changelog): 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- chore(scripts): update scripts ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat(scope): add another feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- fix: fix bug ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(readme): update readme ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add baz ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add bar ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add foo ([REPLACED](https://www.my-remote.com/commit/REPLACED))


test: ["--no-links"]


test: ["--remote-url=https://www.my-repo.com"]


test: ["--max-commits=3"]


test: ["--tag-filter-regex='my-package/.*'"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no commits since previous version.  exiting...


test: ["--commit-filter-preset=angular"]


test: ["--commit-filter-preset=angular, --commit-filter-preset=angular-readme-only-docs"]


test: ["--commit-filter-preset=no-changelog"]


test: ["--commit-filter-preset=no-semver, --commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no commits since previous version.  exiting...


test: ["--version"]
1.2.0


test: ["-v"]
1.2.0


test: ["--help"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["-h"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["--overwrite"]


test: ["--root=./bar/baz"]


test: ["--output=stdout"]
## [v1.0.0](https://www.my-remote.com/tags) (REPLACED)

- 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- non-angular commit ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- refactor: refactor code ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(changelog): 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- chore(scripts): update scripts ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat(scope): add another feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- fix: fix bug ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(readme): update readme ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- non-angular commit ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- refactor: refactor code ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(changelog): 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- chore(scripts): update scripts ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat(scope): add another feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- fix: fix bug ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(readme): update readme ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- non-angular commit ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- refactor: refactor code ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(changelog): 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- chore(scripts): update scripts ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat(scope): add another feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- fix: fix bug ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(readme): update readme ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add baz ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add bar ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add foo ([REPLACED](https://www.my-remote.com/commit/REPLACED))


test: ["--no-links"]


test: ["--remote-url=https://www.my-repo.com"]


test: ["--max-commits=3"]


test: ["--tag-filter-regex='my-package/.*'"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no commits since previous version.  exiting...


test: ["--commit-filter-preset=angular"]


test: ["--commit-filter-preset=angular, --commit-filter-preset=angular-readme-only-docs"]


test: ["--commit-filter-preset=no-changelog"]


test: ["--commit-filter-preset=no-semver, --commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no commits since previous version.  exiting...


test: ["--version"]
1.2.0


test: ["-v"]
1.2.0


test: ["--help"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["-h"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["--overwrite"]


test: ["--root=./bar/baz"]


test: ["--output=stdout"]
## [v1.0.0](https://www.my-remote.com/tags) (REPLACED)

- 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- non-angular commit ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- refactor: refactor code ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(changelog): 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- chore(scripts): update scripts ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat(scope): add another feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- fix: fix bug ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(readme): update readme ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- non-angular commit ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- refactor: refactor code ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(changelog): 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- chore(scripts): update scripts ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat(scope): add another feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- fix: fix bug ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(readme): update readme ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- non-angular commit ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- refactor: refactor code ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(changelog): 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- chore(scripts): update scripts ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat(scope): add another feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- fix: fix bug ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(readme): update readme ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add baz ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add bar ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add foo ([REPLACED](https://www.my-remote.com/commit/REPLACED))


test: ["--no-links"]


test: ["--remote-url=https://www.my-repo.com"]


test: ["--max-commits=3"]


test: ["--tag-filter-regex='my-package/.*'"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no commits since previous version.  exiting...


test: ["--commit-filter-preset=angular"]


test: ["--commit-filter-preset=angular, --commit-filter-preset=angular-readme-only-docs"]


test: ["--commit-filter-preset=no-changelog"]


test: ["--commit-filter-preset=no-semver, --commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no commits since previous version.  exiting...


test: ["--version"]
1.2.0


test: ["-v"]
1.2.0


test: ["--help"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["-h"]
Changenog options:
  --overwrite            | boolean | overwrite existing changelog
  --root                 | string  | root dir relative to the current working directory.  default: current working directory
  --output               | string  | output of the generated changelog.  one of ['file', 'stdout'].  default: 'file'
  --no-links             | boolean | disable links
  --remote-url           | string  | remote URL to use for links.  default: origin
  --max-commits          | number  | maximum number of commits to process.  default: '1000'
  --tag-filter-regex     | regex   | regex pattern(s) that each tag must match to be included
  --commit-filter-regex  | regex   | regex pattern(s) that each commit must match to be included
  --commit-filter-preset | string  | filter preset(s) to use.  one of ['angular', 'angular-readme-only-docs', 'no-changelog', 'no-semver']


test: ["--overwrite"]


test: ["--root=./bar/baz"]


test: ["--output=stdout"]
## [v1.0.0](https://www.my-remote.com/tags) (REPLACED)

- 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- non-angular commit ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- refactor: refactor code ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(changelog): 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- chore(scripts): update scripts ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat(scope): add another feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- fix: fix bug ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(readme): update readme ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- non-angular commit ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- refactor: refactor code ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(changelog): 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- chore(scripts): update scripts ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat(scope): add another feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- fix: fix bug ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(readme): update readme ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- non-angular commit ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- refactor: refactor code ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(changelog): 1.0.0 ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- chore(scripts): update scripts ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat(scope): add another feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- fix: fix bug ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add feature ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- docs(readme): update readme ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add baz ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add bar ([REPLACED](https://www.my-remote.com/commit/REPLACED))
- feat: add foo ([REPLACED](https://www.my-remote.com/commit/REPLACED))


test: ["--no-links"]


test: ["--remote-url=https://www.my-repo.com"]


test: ["--max-commits=3"]


test: ["--tag-filter-regex='my-package/.*'"]
[33m[changenog][0m no tags found.  exiting...


test: ["--commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no commits since previous version.  exiting...


test: ["--commit-filter-preset=angular"]


test: ["--commit-filter-preset=angular, --commit-filter-preset=angular-readme-only-docs"]


test: ["--commit-filter-preset=no-changelog"]


test: ["--commit-filter-preset=no-semver, --commit-filter-regex='^(?!.*changelog).*$'"]
[33m[changenog][0m no commits since previous version.  exiting...


